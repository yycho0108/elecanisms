#muah
import bootloadercmd as b

env = Environment(PIC = '24FJ128GB206', 
                  CC = 'xc16-gcc', 
                  PROGSUFFIX = '.elf', 
                  CFLAGS = '-g -omf=elf -x c -mcpu=$PIC', 
                  LINKFLAGS = '-omf=elf -mcpu=$PIC -Wl,--script="app_p24FJ128GB206.gld"', 
                  CPPPATH = '../lib')

env.PrependENVPath('PATH', '/opt/microchip/xc16/v1.30/bin')

bin2hex = Builder(action = 'xc16-bin2hex $SOURCE -omf=elf',
                  suffix = 'hex', 
                  src_suffix = 'elf')

env.Append(BUILDERS = {'Hex' : bin2hex})
list = Builder(action = 'xc16-objdump -S -D $SOURCE > $TARGET', 
               suffix = 'lst', 
               src_suffix = 'elf')
env.Append(BUILDERS = {'List' : list})

env.Program('hellousb', ['hellousb.c',
                         'descriptors.c', 
                         'usb.c', 
                         '../lib/pin.c', 
                         '../lib/uart.c',
						 '../lib/ui.c',
						 '../lib/oc.c',
						 '../lib/timer.c'
])

def load_function(target, source, env):
    bl = b.bootloadercmd()
    bl.import_hex(source[0].rstr())
    bl.write_device()
    bl.bootloader.start_user()
    bl.bootloader.close()
    return None

load = Builder(action=load_function,
               suffix = 'none',
               src_suffix = 'hex')

env.Append(BUILDERS = {'Load' : load})

env.Hex('hellousb')
env.List('hellousb')
env.Load('hellousb')  # Uncomment this line to automatically load the hex file

